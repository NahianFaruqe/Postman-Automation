{
  "collection": {
    "_": {
      "postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
      "exporter_id": "21628673"
    },
    "item": [
      {
        "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
        "name": "Get Air Quality Status",
        "request": {
          "description": {
            "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "forecasts",
              "v1",
              "daily",
              "1day",
              "{{locationKey}}.json"
            ],
            "host": [
              "dataservice",
              "accuweather",
              "com"
            ],
            "query": [
              {
                "key": "apikey",
                "value": "{{accuweatherApiKey}}"
              },
              {
                "key": "details",
                "value": "true"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [
          {
            "_": {
              "postman_previewlanguage": "json"
            },
            "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
            "name": "AccuWeather Forecast",
            "originalRequest": {
              "url": {
                "protocol": "http",
                "path": [
                  "forecasts",
                  "v1",
                  "daily",
                  "1day",
                  "{{locationKey}}.json"
                ],
                "host": [
                  "dataservice",
                  "accuweather",
                  "com"
                ],
                "query": [
                  {
                    "key": "apikey",
                    "value": "{{accuweatherApiKey}}"
                  },
                  {
                    "key": "details",
                    "value": "true"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "status": "OK",
            "code": 200,
            "header": [
              {
                "name": "Accept",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Accept",
                "value": "*/*"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Access-Control-Allow-Headers",
                "value": "origin, x-requested-with, accept"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Access-Control-Allow-Methods",
                "value": "GET, PUT, POST, DELETE"
              },
              {
                "name": "Access-Control-Allow-Origin",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Max-Age",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Access-Control-Max-Age",
                "value": "3628800"
              },
              {
                "name": "Cache-Control",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Cache-Control",
                "value": "no-cache"
              },
              {
                "name": "Connection",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Connection",
                "value": "keep-alive"
              },
              {
                "name": "Content-Encoding",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Encoding",
                "value": "gzip"
              },
              {
                "name": "Content-Type",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Content-Type",
                "value": "application/json; charset=utf-8"
              },
              {
                "name": "Date",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Date",
                "value": "Fri, 13 Oct 2017 19:58:03 GMT"
              },
              {
                "name": "Expires",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Expires",
                "value": "Fri, 13 Oct 2017 20:18:02 GMT"
              },
              {
                "name": "Postman-Token",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Postman-Token",
                "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
              },
              {
                "name": "RateLimit-Limit",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "RateLimit-Limit",
                "value": "50"
              },
              {
                "name": "RateLimit-Remaining",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "RateLimit-Remaining",
                "value": "31"
              },
              {
                "name": "Server",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Server",
                "value": "Microsoft-IIS/10.0"
              },
              {
                "name": "User-Agent",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "User-Agent",
                "value": "PostmanRuntime/6.4.0"
              },
              {
                "name": "Vary",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "Vary",
                "value": "Accept-Encoding"
              },
              {
                "name": "X-Forwarded-For",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "X-Forwarded-For",
                "value": "204.14.158.214"
              },
              {
                "name": "X-Forwarded-Port",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "X-Forwarded-Port",
                "value": "80"
              },
              {
                "name": "X-Forwarded-Proto",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "X-Forwarded-Proto",
                "value": "http"
              },
              {
                "name": "accept-encoding",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "accept-encoding",
                "value": "gzip"
              },
              {
                "name": "accept-encoding",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "accept-encoding",
                "value": "deflate"
              },
              {
                "name": "transfer-encoding",
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "transfer-encoding",
                "value": "chunked"
              }
            ],
            "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
            "cookie": []
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
              "type": "text/javascript",
              "exec": [
                "// Validate environment variables",
                "const pmEnvironment = pm.environment.toObject();",
                "",
                "// Check for required environment variables",
                "pm.expect(pmEnvironment).to.have.all.keys(",
                "    'location',",
                "    'accuweatherApiKey',",
                "    'twitterConsumerKey',",
                "    'twitterConsumerSecret',",
                "    'twitterAccessToken',",
                "    'twitterAccessTokenSecret'",
                ");",
                "",
                "// Get an accuweather location key",
                "const apiKey = pm.environment.get('accuweatherApiKey');",
                "const locationQuery = pm.environment.get('location');",
                "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                "",
                "// Get and save location data from a location query string",
                "function saveLocationData (e, response) {",
                "    // Throw if we get an error",
                "    if (e) { throw e; }",
                "    ",
                "    // Handle error response",
                "    if (response.code >= 400) {",
                "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                "        console.log(response.text());",
                "        ",
                "        // Throw",
                "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                "    }",
                "    ",
                "    // Log location info and store the location information",
                "    const responseData = response.json();",
                "    ",
                "    if (responseData.length > 1) {",
                "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                "    }",
                "    ",
                "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                "    ",
                "    pm.globals.set('locationKey', locationKey);",
                "    pm.globals.set('locationName', locationName);",
                "    ",
                "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                "}",
                "",
                "// Send the request to get location data",
                "pm.sendRequest(getLocationData, saveLocationData);"
              ],
              "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
              "type": "text/javascript",
              "exec": [
                "// Test the response",
                "pm.test('Status code is OK', () => {",
                "    pm.response.to.be.ok;",
                "});",
                "",
                "pm.test('Response has forecast data', () => {",
                "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                "});",
                "",
                "try {",
                "    // Check for a non-error response code",
                "    if (pm.response.code >= 400) {",
                "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                "",
                "        throw new Error('Error response from API.');",
                "    }",
                "",
                "    // Extract the air quality data",
                "    const responseData = pm.response.json();",
                "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                "    const aqValue = airQuality.Value;",
                "    const aqCategory = airQuality.Category;",
                "    const locationName = pm.globals.get('locationName');",
                "    ",
                "    // Build the Twitter status",
                "    const twitterStatus =",
                "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                "    ",
                "    // Log the Twitter status",
                "    console.log(`Twitter status :: ${twitterStatus}`);",
                "    ",
                "    // Assign status to a Twitter global",
                "    pm.globals.set('twitterStatus', twitterStatus);",
                "}",
                "catch (e) {",
                "    // The data probably didn't match the expected values",
                "    console.log(`ERROR :: ${e.message}`);",
                "    console.log(pm.response.text());",
                "",
                "    throw e;",
                "}",
                ""
              ],
              "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
            }
          }
        ]
      },
      {
        "id": "0f0e5642-af31-4f75-a581-09952d55683c",
        "name": "Post Air Quality Status to Twitter",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "1.1",
              "statuses",
              "update.json"
            ],
            "host": [
              "api",
              "twitter",
              "com"
            ],
            "query": [
              {
                "key": "status",
                "value": "{{twitterStatus}}"
              }
            ],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "auth": {
            "type": "oauth1",
            "oauth1": [
              {
                "type": "string",
                "value": "{{twitterConsumerKey}}",
                "key": "consumerKey"
              },
              {
                "type": "string",
                "value": "{{twitterConsumerSecret}}",
                "key": "consumerSecret"
              },
              {
                "type": "string",
                "value": "{{twitterAccessToken}}",
                "key": "token"
              },
              {
                "type": "string",
                "value": "{{twitterAccessTokenSecret}}",
                "key": "tokenSecret"
              },
              {
                "type": "string",
                "value": "HMAC-SHA1",
                "key": "signatureMethod"
              },
              {
                "type": "string",
                "value": "",
                "key": "timestamp"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "1.0",
                "key": "version"
              },
              {
                "type": "string",
                "value": "",
                "key": "realm"
              },
              {
                "type": "boolean",
                "value": true,
                "key": "addParamsToHeader"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "addEmptyParamsToSign"
              }
            ]
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "216285ef-2072-48cb-a756-553912582966",
              "type": "text/javascript",
              "exec": [
                "",
                ""
              ],
              "_lastExecutionId": "f57b97b6-700c-43bb-83e0-7c352cea68e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
              "type": "text/javascript",
              "exec": [
                "// Check for OK response",
                "pm.test('Status code is OK', () => {",
                "    pm.response.to.be.ok;",
                "});",
                "",
                "// Clear global state",
                "pm.globals.clear('locationKey');",
                "pm.globals.clear('locationName');",
                "pm.globals.clear('twitterStatus');"
              ],
              "_lastExecutionId": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
      "name": "Air Quality",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "# Postman Air Quality Collection\n**Welcome to the Postman Air Quality Collection.**\nThis collection was created in response to the 2017 wildfires that devastated Northern California. The fires brought tragedy, and also caused hazardous ash and smoke pollution in the surrounding areas. As Postman has an office in San Francisco, we thought it was important to help our fellow Northern Californians and the rest of the world stay aware of the air quality in their surroundings.\n\nThis collection gets air quality updates from the AccuWeather API and posts them to Twitter according to your account and location specifications. \n\n\n## Technologies Used\n1. **Postman** - This collection utilizes [Postman Collections](https://www.getpostman.com/docs/postman/collections/creating_collections), [Postman Monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors), and [Postman Environments](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments).\n\n2. **AccuWeather API** - [AccuWeather’s API](https://developer.accuweather.com/home) allows users to obtain real weather data, including air quality data.\n\n  * **Using the AccuWeather API** - \n  To use AccuWeather’s API you will need to create an account and obtain a trial API key from their website. You can make up to 50 calls to the API per day on the trial, which should be enough to run this collection as an individual user.\n\n3. **Twitter** - We’ve chosen to use the [Twitter API](https://developer.twitter.com/en/docs/basics/getting-started)  as a platform to reach out to our community and spread the message about the state of the San Francisco air quality since the Northern California fires have started. You can configure your own Twitter account to post periodic air quality updates.\n\n  * **Using the Twitter API** - \n  To use Twitter’s API, you will need to create [a Twitter app](https://apps.twitter.com/) and get OAuth credentials.\n\n## Environment Variables\nYou need to set several environment variables before this collection will run:\n\n|Environment Variable Name |Description\n|--------------------------|--------------\n|`location`                |A string describing the location you would like to monitor\n|`accuweatherApiKey`       |An [AccuWeather API key](https://developer.accuweather.com/home)\n|`twitterConsumerKey`      |[A Twitter OAuth Consumer Key](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterConsumerSecret`   |[A Twitter OAuth Consumer Secret](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessToken`      |[A Twitter OAuth Access Token](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessSecret`     |[A Twitter OAuth Access Token Secret](https://developer.twitter.com/en/docs/basics/getting-started)",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "543face4-7b27-4391-9a8c-341596e1bb77",
    "values": []
  },
  "globals": {
    "id": "c77ce565-f2a1-4d12-a4bc-da5fbbf5a37f",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 2
      },
      "prerequests": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 2,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 3,
        "pending": 0,
        "failed": 3
      },
      "testScripts": {
        "total": 2,
        "pending": 0,
        "failed": 1
      },
      "prerequestScripts": {
        "total": 2,
        "pending": 0,
        "failed": 1
      }
    },
    "timings": {
      "responseAverage": 807,
      "responseMin": 755,
      "responseMax": 859,
      "responseSd": 52,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1656562777431,
      "completed": 1656562779297
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2cecd83-1931-4219-af7c-0a2bb146fc56",
          "httpRequestId": "2e9bc0e5-8e96-44ae-896c-cb2c51f972c3"
        },
        "item": {
          "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
          "name": "Get Air Quality Status",
          "request": {
            "description": {
              "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "path": [
                "forecasts",
                "v1",
                "daily",
                "1day",
                "{{locationKey}}.json"
              ],
              "host": [
                "dataservice",
                "accuweather",
                "com"
              ],
              "query": [
                {
                  "key": "apikey",
                  "value": "{{accuweatherApiKey}}"
                },
                {
                  "key": "details",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
              "name": "AccuWeather Forecast",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Accept",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "*/*"
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": "origin, x-requested-with, accept"
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": "GET, PUT, POST, DELETE"
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "name": "Access-Control-Max-Age",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Max-Age",
                  "value": "3628800"
                },
                {
                  "name": "Cache-Control",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": "no-cache"
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                },
                {
                  "name": "Expires",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                },
                {
                  "name": "Postman-Token",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Postman-Token",
                  "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                },
                {
                  "name": "RateLimit-Limit",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Limit",
                  "value": "50"
                },
                {
                  "name": "RateLimit-Remaining",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Remaining",
                  "value": "31"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "Microsoft-IIS/10.0"
                },
                {
                  "name": "User-Agent",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "User-Agent",
                  "value": "PostmanRuntime/6.4.0"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Forwarded-For",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-For",
                  "value": "204.14.158.214"
                },
                {
                  "name": "X-Forwarded-Port",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Port",
                  "value": "80"
                },
                {
                  "name": "X-Forwarded-Proto",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Proto",
                  "value": "http"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "gzip"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "deflate"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                "type": "text/javascript",
                "exec": [
                  "// Validate environment variables",
                  "const pmEnvironment = pm.environment.toObject();",
                  "",
                  "// Check for required environment variables",
                  "pm.expect(pmEnvironment).to.have.all.keys(",
                  "    'location',",
                  "    'accuweatherApiKey',",
                  "    'twitterConsumerKey',",
                  "    'twitterConsumerSecret',",
                  "    'twitterAccessToken',",
                  "    'twitterAccessTokenSecret'",
                  ");",
                  "",
                  "// Get an accuweather location key",
                  "const apiKey = pm.environment.get('accuweatherApiKey');",
                  "const locationQuery = pm.environment.get('location');",
                  "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                  "",
                  "// Get and save location data from a location query string",
                  "function saveLocationData (e, response) {",
                  "    // Throw if we get an error",
                  "    if (e) { throw e; }",
                  "    ",
                  "    // Handle error response",
                  "    if (response.code >= 400) {",
                  "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                  "        console.log(response.text());",
                  "        ",
                  "        // Throw",
                  "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                  "    }",
                  "    ",
                  "    // Log location info and store the location information",
                  "    const responseData = response.json();",
                  "    ",
                  "    if (responseData.length > 1) {",
                  "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                  "    }",
                  "    ",
                  "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                  "    ",
                  "    pm.globals.set('locationKey', locationKey);",
                  "    pm.globals.set('locationName', locationName);",
                  "    ",
                  "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                  "}",
                  "",
                  "// Send the request to get location data",
                  "pm.sendRequest(getLocationData, saveLocationData);"
                ],
                "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                "type": "text/javascript",
                "exec": [
                  "// Test the response",
                  "pm.test('Status code is OK', () => {",
                  "    pm.response.to.be.ok;",
                  "});",
                  "",
                  "pm.test('Response has forecast data', () => {",
                  "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                  "});",
                  "",
                  "try {",
                  "    // Check for a non-error response code",
                  "    if (pm.response.code >= 400) {",
                  "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                  "",
                  "        throw new Error('Error response from API.');",
                  "    }",
                  "",
                  "    // Extract the air quality data",
                  "    const responseData = pm.response.json();",
                  "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                  "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                  "    const aqValue = airQuality.Value;",
                  "    const aqCategory = airQuality.Category;",
                  "    const locationName = pm.globals.get('locationName');",
                  "    ",
                  "    // Build the Twitter status",
                  "    const twitterStatus =",
                  "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                  "    ",
                  "    // Log the Twitter status",
                  "    console.log(`Twitter status :: ${twitterStatus}`);",
                  "    ",
                  "    // Assign status to a Twitter global",
                  "    pm.globals.set('twitterStatus', twitterStatus);",
                  "}",
                  "catch (e) {",
                  "    // The data probably didn't match the expected values",
                  "    console.log(`ERROR :: ${e.message}`);",
                  "    console.log(pm.response.text());",
                  "",
                  "    throw e;",
                  "}",
                  ""
                ],
                "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
              }
            }
          ]
        },
        "prerequestScript": [
          {
            "error": {
              "name": "AssertionError",
              "message": "expected {} to have keys 'location', 'accuweatherApiKey', 'twitterConsumerKey', 'twitterConsumerSecret', 'twitterAccessToken', and 'twitterAccessTokenSecret'",
              "showDiff": true,
              "actual": [],
              "expected": [
                "accuweatherApiKey",
                "location",
                "twitterAccessToken",
                "twitterAccessTokenSecret",
                "twitterConsumerKey",
                "twitterConsumerSecret"
              ],
              "stack": "AssertionError: expected {} to have keys 'location', 'accuweatherApiKey', 'twitterConsumerKey', 'twitterConsumerSecret', 'twitterAccessToken', and 'twitterAccessTokenSecret'\n    at Object.eval (eval at exec (evalmachine.<anonymous>:58:1788403), <anonymous>:6:38)\n    at u.exec (evalmachine.<anonymous>:58:1788438)\n    at t.exports (evalmachine.<anonymous>:58:5743)\n    at Object.<anonymous> (evalmachine.<anonymous>:58:7440)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:54)\n    at evalmachine.<anonymous>:51:24\n    at evalmachine.<anonymous>:5:21\n    at evalmachine.<anonymous>:6:18",
              "checksum": "650e63ddf65fa45e60788eb46ae61453",
              "id": "20e089ff-cba4-410b-b52c-02b753e28a65",
              "timestamp": 1656562777500,
              "stacktrace": [
                {
                  "fileName": "<anonymous>",
                  "lineNumber": 6,
                  "functionName": "Object.eval (eval at exec (evalmachine.<anonymous>:58:1788403),",
                  "typeName": "Object",
                  "methodName": "eval (eval at exec (evalmachine.<anonymous>:58:1788403),",
                  "columnNumber": 38,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 58,
                  "functionName": "u.exec",
                  "typeName": "u",
                  "methodName": "exec",
                  "columnNumber": 1788438,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 58,
                  "functionName": "t.exports",
                  "typeName": "t",
                  "methodName": "exports",
                  "columnNumber": 5743,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 58,
                  "functionName": "",
                  "typeName": "Object",
                  "methodName": null,
                  "columnNumber": 7440,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 15,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 26,
                  "native": false
                },
                {
                  "fileName": null,
                  "lineNumber": null,
                  "functionName": "Array.forEach",
                  "typeName": "Array",
                  "methodName": "forEach",
                  "columnNumber": null,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 14,
                  "functionName": "Object.emit",
                  "typeName": "Object",
                  "methodName": "emit",
                  "columnNumber": 54,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 51,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 24,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 5,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 21,
                  "native": false
                },
                {
                  "fileName": "evalmachine.<anonymous>",
                  "lineNumber": 6,
                  "functionName": null,
                  "typeName": null,
                  "methodName": null,
                  "columnNumber": 18,
                  "native": false
                }
              ]
            }
          }
        ],
        "request": {
          "description": {
            "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "forecasts",
              "v1",
              "daily",
              "1day",
              "%7B%7BlocationKey%7D%7D.json"
            ],
            "host": [
              "dataservice",
              "accuweather",
              "com"
            ],
            "query": [
              {
                "key": "apikey",
                "value": "{{accuweatherApiKey}}"
              },
              {
                "key": "details",
                "value": "true"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dc7753a2-0357-4b83-97e3-e1a264641d70",
              "system": true
            },
            {
              "key": "Host",
              "value": "dataservice.accuweather.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "8fc74927-53b7-4a86-be37-cc79c235226d",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Date",
              "value": "Thu, 30 Jun 2022 04:19:40 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Content-Length",
              "value": "178"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              67,
              111,
              100,
              101,
              34,
              58,
              34,
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100,
              34,
              44,
              34,
              77,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              112,
              105,
              32,
              65,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              97,
              116,
              105,
              111,
              110,
              32,
              102,
              97,
              105,
              108,
              101,
              100,
              34,
              44,
              34,
              82,
              101,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              34,
              58,
              34,
              47,
              102,
              111,
              114,
              101,
              99,
              97,
              115,
              116,
              115,
              47,
              118,
              49,
              47,
              100,
              97,
              105,
              108,
              121,
              47,
              49,
              100,
              97,
              121,
              47,
              37,
              55,
              66,
              37,
              55,
              66,
              108,
              111,
              99,
              97,
              116,
              105,
              111,
              110,
              75,
              101,
              121,
              37,
              55,
              68,
              37,
              55,
              68,
              46,
              106,
              115,
              111,
              110,
              63,
              97,
              112,
              105,
              107,
              101,
              121,
              61,
              37,
              55,
              66,
              37,
              55,
              66,
              97,
              99,
              99,
              117,
              119,
              101,
              97,
              116,
              104,
              101,
              114,
              65,
              112,
              105,
              75,
              101,
              121,
              37,
              55,
              68,
              37,
              55,
              68,
              38,
              100,
              101,
              116,
              97,
              105,
              108,
              115,
              61,
              116,
              114,
              117,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 859,
          "responseSize": 178
        },
        "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
        "assertions": [
          {
            "assertion": "Status code is OK",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is OK",
              "message": "expected response to have status reason 'OK' but got 'UNAUTHORIZED'",
              "stack": "AssertionError: expected response to have status reason 'OK' but got 'UNAUTHORIZED'\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Response has forecast data",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has forecast data",
              "message": "expected { Object (Code, Message, ...) } to have property 'DailyForecasts'",
              "stack": "AssertionError: expected { Object (Code, Message, ...) } to have property 'DailyForecasts'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ],
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "Error",
              "message": "Error response from API.",
              "checksum": "f913c74359595d7b2b63b46c74ff0085",
              "id": "8ba93fa0-30fe-4428-842a-e2b55b851556",
              "timestamp": 1656562778447,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ab6cb66e-4253-4df2-8d32-4dd3901c1889",
          "length": 2,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "068fd9da-3d5e-4ed3-b3b0-0f55f4c43203"
        },
        "item": {
          "id": "0f0e5642-af31-4f75-a581-09952d55683c",
          "name": "Post Air Quality Status to Twitter",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1.1",
                "statuses",
                "update.json"
              ],
              "host": [
                "api",
                "twitter",
                "com"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{twitterStatus}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "auth": {
              "type": "oauth1",
              "oauth1": [
                {
                  "type": "string",
                  "value": "{{twitterConsumerKey}}",
                  "key": "consumerKey"
                },
                {
                  "type": "string",
                  "value": "{{twitterConsumerSecret}}",
                  "key": "consumerSecret"
                },
                {
                  "type": "string",
                  "value": "{{twitterAccessToken}}",
                  "key": "token"
                },
                {
                  "type": "string",
                  "value": "{{twitterAccessTokenSecret}}",
                  "key": "tokenSecret"
                },
                {
                  "type": "string",
                  "value": "HMAC-SHA1",
                  "key": "signatureMethod"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "1.0",
                  "key": "version"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "realm"
                },
                {
                  "type": "boolean",
                  "value": true,
                  "key": "addParamsToHeader"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "addEmptyParamsToSign"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "216285ef-2072-48cb-a756-553912582966",
                "type": "text/javascript",
                "exec": [
                  "",
                  ""
                ],
                "_lastExecutionId": "f57b97b6-700c-43bb-83e0-7c352cea68e0"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
                "type": "text/javascript",
                "exec": [
                  "// Check for OK response",
                  "pm.test('Status code is OK', () => {",
                  "    pm.response.to.be.ok;",
                  "});",
                  "",
                  "// Clear global state",
                  "pm.globals.clear('locationKey');",
                  "pm.globals.clear('locationName');",
                  "pm.globals.clear('twitterStatus');"
                ],
                "_lastExecutionId": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "1.1",
              "statuses",
              "update.json"
            ],
            "host": [
              "api",
              "twitter",
              "com"
            ],
            "query": [
              {
                "key": "status",
                "value": "%7B%7BtwitterStatus%7D%7D"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "OAuth oauth_consumer_key=\"%7B%7BtwitterConsumerKey%7D%7D\",oauth_token=\"%7B%7BtwitterAccessToken%7D%7D\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1656562778\",oauth_nonce=\"3rUNibTTDVg\",oauth_version=\"1.0\",oauth_signature=\"IYmmOgF3qVk%2FoAOKWGAnQkTmDe4%3D\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.29.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "93b34f54-7e70-4ba7-8a3a-7016d8ac1fb8",
              "system": true
            },
            {
              "key": "Host",
              "value": "api.twitter.com",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "0",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": []
          },
          "auth": {
            "type": "oauth1",
            "oauth1": [
              {
                "type": "string",
                "value": "{{twitterConsumerKey}}",
                "key": "consumerKey"
              },
              {
                "type": "string",
                "value": "{{twitterConsumerSecret}}",
                "key": "consumerSecret"
              },
              {
                "type": "string",
                "value": "{{twitterAccessToken}}",
                "key": "token"
              },
              {
                "type": "string",
                "value": "{{twitterAccessTokenSecret}}",
                "key": "tokenSecret"
              },
              {
                "type": "string",
                "value": "HMAC-SHA1",
                "key": "signatureMethod"
              },
              {
                "type": "string",
                "value": "",
                "key": "timestamp"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "1.0",
                "key": "version"
              },
              {
                "type": "string",
                "value": "",
                "key": "realm"
              },
              {
                "type": "boolean",
                "value": true,
                "key": "addParamsToHeader"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "addEmptyParamsToSign"
              }
            ]
          }
        },
        "response": {
          "id": "1f46895b-2da5-4e30-8950-e9ede6e8a493",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "date",
              "value": "Thu, 30 Jun 2022 04:19:40 GMT"
            },
            {
              "key": "server",
              "value": "tsa_k"
            },
            {
              "key": "set-cookie",
              "value": "guest_id_marketing=v1%3A165656278095849485; Max-Age=63072000; Expires=Sat, 29 Jun 2024 04:19:40 GMT; Path=/; Domain=.twitter.com; Secure; SameSite=None"
            },
            {
              "key": "set-cookie",
              "value": "guest_id_ads=v1%3A165656278095849485; Max-Age=63072000; Expires=Sat, 29 Jun 2024 04:19:40 GMT; Path=/; Domain=.twitter.com; Secure; SameSite=None"
            },
            {
              "key": "set-cookie",
              "value": "personalization_id=\"v1_MUU9N2B00ULQw8Iwu+NQ2w==\"; Max-Age=63072000; Expires=Sat, 29 Jun 2024 04:19:40 GMT; Path=/; Domain=.twitter.com; Secure; SameSite=None"
            },
            {
              "key": "set-cookie",
              "value": "guest_id=v1%3A165656278095849485; Max-Age=63072000; Expires=Sat, 29 Jun 2024 04:19:40 GMT; Path=/; Domain=.twitter.com; Secure; SameSite=None"
            },
            {
              "key": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "cache-control",
              "value": "no-cache, no-store, max-age=0"
            },
            {
              "key": "content-length",
              "value": "87"
            },
            {
              "key": "content-encoding",
              "value": "gzip"
            },
            {
              "key": "strict-transport-security",
              "value": "max-age=631138519"
            },
            {
              "key": "x-response-time",
              "value": "173"
            },
            {
              "key": "x-connection-hash",
              "value": "7e1dd262dac9dd004e03c039628ecbd942f48b7ab56f1e27ceaeba399be821e0"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              115,
              34,
              58,
              91,
              123,
              34,
              99,
              111,
              100,
              101,
              34,
              58,
              56,
              57,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              111,
              114,
              32,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              32,
              116,
              111,
              107,
              101,
              110,
              46,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 755,
          "responseSize": 62
        },
        "id": "0f0e5642-af31-4f75-a581-09952d55683c",
        "assertions": [
          {
            "assertion": "Status code is OK",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is OK",
              "message": "expected response to have status reason 'OK' but got 'UNAUTHORIZED'",
              "stack": "AssertionError: expected response to have status reason 'OK' but got 'UNAUTHORIZED'\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 265
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "message": "expected {} to have keys 'location', 'accuweatherApiKey', 'twitterConsumerKey', 'twitterConsumerSecret', 'twitterAccessToken', and 'twitterAccessTokenSecret'",
          "showDiff": true,
          "actual": [],
          "expected": [
            "accuweatherApiKey",
            "location",
            "twitterAccessToken",
            "twitterAccessTokenSecret",
            "twitterConsumerKey",
            "twitterConsumerSecret"
          ],
          "stack": "AssertionError: expected {} to have keys 'location', 'accuweatherApiKey', 'twitterConsumerKey', 'twitterConsumerSecret', 'twitterAccessToken', and 'twitterAccessTokenSecret'\n    at Object.eval (eval at exec (evalmachine.<anonymous>:58:1788403), <anonymous>:6:38)\n    at u.exec (evalmachine.<anonymous>:58:1788438)\n    at t.exports (evalmachine.<anonymous>:58:5743)\n    at Object.<anonymous> (evalmachine.<anonymous>:58:7440)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:54)\n    at evalmachine.<anonymous>:51:24\n    at evalmachine.<anonymous>:5:21\n    at evalmachine.<anonymous>:6:18",
          "checksum": "650e63ddf65fa45e60788eb46ae61453",
          "id": "20e089ff-cba4-410b-b52c-02b753e28a65",
          "timestamp": 1656562777500,
          "stacktrace": [
            {
              "fileName": "<anonymous>",
              "lineNumber": 6,
              "functionName": "Object.eval (eval at exec (evalmachine.<anonymous>:58:1788403),",
              "typeName": "Object",
              "methodName": "eval (eval at exec (evalmachine.<anonymous>:58:1788403),",
              "columnNumber": 38,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 58,
              "functionName": "u.exec",
              "typeName": "u",
              "methodName": "exec",
              "columnNumber": 1788438,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 58,
              "functionName": "t.exports",
              "typeName": "t",
              "methodName": "exports",
              "columnNumber": 5743,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 58,
              "functionName": "",
              "typeName": "Object",
              "methodName": null,
              "columnNumber": 7440,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 15,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 26,
              "native": false
            },
            {
              "fileName": null,
              "lineNumber": null,
              "functionName": "Array.forEach",
              "typeName": "Array",
              "methodName": "forEach",
              "columnNumber": null,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 14,
              "functionName": "Object.emit",
              "typeName": "Object",
              "methodName": "emit",
              "columnNumber": 54,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 51,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 24,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 5,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 21,
              "native": false
            },
            {
              "fileName": "evalmachine.<anonymous>",
              "lineNumber": 6,
              "functionName": null,
              "typeName": null,
              "methodName": null,
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "prerequest-script:4:38",
        "source": {
          "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
          "name": "Get Air Quality Status",
          "request": {
            "description": {
              "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "path": [
                "forecasts",
                "v1",
                "daily",
                "1day",
                "{{locationKey}}.json"
              ],
              "host": [
                "dataservice",
                "accuweather",
                "com"
              ],
              "query": [
                {
                  "key": "apikey",
                  "value": "{{accuweatherApiKey}}"
                },
                {
                  "key": "details",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
              "name": "AccuWeather Forecast",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Accept",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "*/*"
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": "origin, x-requested-with, accept"
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": "GET, PUT, POST, DELETE"
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "name": "Access-Control-Max-Age",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Max-Age",
                  "value": "3628800"
                },
                {
                  "name": "Cache-Control",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": "no-cache"
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                },
                {
                  "name": "Expires",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                },
                {
                  "name": "Postman-Token",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Postman-Token",
                  "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                },
                {
                  "name": "RateLimit-Limit",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Limit",
                  "value": "50"
                },
                {
                  "name": "RateLimit-Remaining",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Remaining",
                  "value": "31"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "Microsoft-IIS/10.0"
                },
                {
                  "name": "User-Agent",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "User-Agent",
                  "value": "PostmanRuntime/6.4.0"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Forwarded-For",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-For",
                  "value": "204.14.158.214"
                },
                {
                  "name": "X-Forwarded-Port",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Port",
                  "value": "80"
                },
                {
                  "name": "X-Forwarded-Proto",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Proto",
                  "value": "http"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "gzip"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "deflate"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                "type": "text/javascript",
                "exec": [
                  "// Validate environment variables",
                  "const pmEnvironment = pm.environment.toObject();",
                  "",
                  "// Check for required environment variables",
                  "pm.expect(pmEnvironment).to.have.all.keys(",
                  "    'location',",
                  "    'accuweatherApiKey',",
                  "    'twitterConsumerKey',",
                  "    'twitterConsumerSecret',",
                  "    'twitterAccessToken',",
                  "    'twitterAccessTokenSecret'",
                  ");",
                  "",
                  "// Get an accuweather location key",
                  "const apiKey = pm.environment.get('accuweatherApiKey');",
                  "const locationQuery = pm.environment.get('location');",
                  "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                  "",
                  "// Get and save location data from a location query string",
                  "function saveLocationData (e, response) {",
                  "    // Throw if we get an error",
                  "    if (e) { throw e; }",
                  "    ",
                  "    // Handle error response",
                  "    if (response.code >= 400) {",
                  "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                  "        console.log(response.text());",
                  "        ",
                  "        // Throw",
                  "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                  "    }",
                  "    ",
                  "    // Log location info and store the location information",
                  "    const responseData = response.json();",
                  "    ",
                  "    if (responseData.length > 1) {",
                  "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                  "    }",
                  "    ",
                  "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                  "    ",
                  "    pm.globals.set('locationKey', locationKey);",
                  "    pm.globals.set('locationName', locationName);",
                  "    ",
                  "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                  "}",
                  "",
                  "// Send the request to get location data",
                  "pm.sendRequest(getLocationData, saveLocationData);"
                ],
                "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                "type": "text/javascript",
                "exec": [
                  "// Test the response",
                  "pm.test('Status code is OK', () => {",
                  "    pm.response.to.be.ok;",
                  "});",
                  "",
                  "pm.test('Response has forecast data', () => {",
                  "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                  "});",
                  "",
                  "try {",
                  "    // Check for a non-error response code",
                  "    if (pm.response.code >= 400) {",
                  "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                  "",
                  "        throw new Error('Error response from API.');",
                  "    }",
                  "",
                  "    // Extract the air quality data",
                  "    const responseData = pm.response.json();",
                  "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                  "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                  "    const aqValue = airQuality.Value;",
                  "    const aqCategory = airQuality.Category;",
                  "    const locationName = pm.globals.get('locationName');",
                  "    ",
                  "    // Build the Twitter status",
                  "    const twitterStatus =",
                  "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                  "    ",
                  "    // Log the Twitter status",
                  "    console.log(`Twitter status :: ${twitterStatus}`);",
                  "    ",
                  "    // Assign status to a Twitter global",
                  "    pm.globals.set('twitterStatus', twitterStatus);",
                  "}",
                  "catch (e) {",
                  "    // The data probably didn't match the expected values",
                  "    console.log(`ERROR :: ${e.message}`);",
                  "    console.log(pm.response.text());",
                  "",
                  "    throw e;",
                  "}",
                  ""
                ],
                "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "exporter_id": "21628673"
          },
          "item": [
            {
              "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
              "name": "Get Air Quality Status",
              "request": {
                "description": {
                  "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
                  "name": "AccuWeather Forecast",
                  "originalRequest": {
                    "url": {
                      "protocol": "http",
                      "path": [
                        "forecasts",
                        "v1",
                        "daily",
                        "1day",
                        "{{locationKey}}.json"
                      ],
                      "host": [
                        "dataservice",
                        "accuweather",
                        "com"
                      ],
                      "query": [
                        {
                          "key": "apikey",
                          "value": "{{accuweatherApiKey}}"
                        },
                        {
                          "key": "details",
                          "value": "true"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Accept",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Accept",
                      "value": "*/*"
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": "origin, x-requested-with, accept"
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET, PUT, POST, DELETE"
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "name": "Access-Control-Max-Age",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Max-Age",
                      "value": "3628800"
                    },
                    {
                      "name": "Cache-Control",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Cache-Control",
                      "value": "no-cache"
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                    },
                    {
                      "name": "Expires",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Expires",
                      "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                    },
                    {
                      "name": "Postman-Token",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Postman-Token",
                      "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                    },
                    {
                      "name": "RateLimit-Limit",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Limit",
                      "value": "50"
                    },
                    {
                      "name": "RateLimit-Remaining",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Remaining",
                      "value": "31"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "Microsoft-IIS/10.0"
                    },
                    {
                      "name": "User-Agent",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "User-Agent",
                      "value": "PostmanRuntime/6.4.0"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Forwarded-For",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-For",
                      "value": "204.14.158.214"
                    },
                    {
                      "name": "X-Forwarded-Port",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Port",
                      "value": "80"
                    },
                    {
                      "name": "X-Forwarded-Proto",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Proto",
                      "value": "http"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "deflate"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                    "type": "text/javascript",
                    "exec": [
                      "// Validate environment variables",
                      "const pmEnvironment = pm.environment.toObject();",
                      "",
                      "// Check for required environment variables",
                      "pm.expect(pmEnvironment).to.have.all.keys(",
                      "    'location',",
                      "    'accuweatherApiKey',",
                      "    'twitterConsumerKey',",
                      "    'twitterConsumerSecret',",
                      "    'twitterAccessToken',",
                      "    'twitterAccessTokenSecret'",
                      ");",
                      "",
                      "// Get an accuweather location key",
                      "const apiKey = pm.environment.get('accuweatherApiKey');",
                      "const locationQuery = pm.environment.get('location');",
                      "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                      "",
                      "// Get and save location data from a location query string",
                      "function saveLocationData (e, response) {",
                      "    // Throw if we get an error",
                      "    if (e) { throw e; }",
                      "    ",
                      "    // Handle error response",
                      "    if (response.code >= 400) {",
                      "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                      "        console.log(response.text());",
                      "        ",
                      "        // Throw",
                      "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                      "    }",
                      "    ",
                      "    // Log location info and store the location information",
                      "    const responseData = response.json();",
                      "    ",
                      "    if (responseData.length > 1) {",
                      "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                      "    }",
                      "    ",
                      "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                      "    ",
                      "    pm.globals.set('locationKey', locationKey);",
                      "    pm.globals.set('locationName', locationName);",
                      "    ",
                      "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                      "}",
                      "",
                      "// Send the request to get location data",
                      "pm.sendRequest(getLocationData, saveLocationData);"
                    ],
                    "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                    "type": "text/javascript",
                    "exec": [
                      "// Test the response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "pm.test('Response has forecast data', () => {",
                      "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                      "});",
                      "",
                      "try {",
                      "    // Check for a non-error response code",
                      "    if (pm.response.code >= 400) {",
                      "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                      "",
                      "        throw new Error('Error response from API.');",
                      "    }",
                      "",
                      "    // Extract the air quality data",
                      "    const responseData = pm.response.json();",
                      "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                      "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                      "    const aqValue = airQuality.Value;",
                      "    const aqCategory = airQuality.Category;",
                      "    const locationName = pm.globals.get('locationName');",
                      "    ",
                      "    // Build the Twitter status",
                      "    const twitterStatus =",
                      "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                      "    ",
                      "    // Log the Twitter status",
                      "    console.log(`Twitter status :: ${twitterStatus}`);",
                      "    ",
                      "    // Assign status to a Twitter global",
                      "    pm.globals.set('twitterStatus', twitterStatus);",
                      "}",
                      "catch (e) {",
                      "    // The data probably didn't match the expected values",
                      "    console.log(`ERROR :: ${e.message}`);",
                      "    console.log(pm.response.text());",
                      "",
                      "    throw e;",
                      "}",
                      ""
                    ],
                    "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
                  }
                }
              ]
            },
            {
              "id": "0f0e5642-af31-4f75-a581-09952d55683c",
              "name": "Post Air Quality Status to Twitter",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1.1",
                    "statuses",
                    "update.json"
                  ],
                  "host": [
                    "api",
                    "twitter",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "{{twitterStatus}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "{{twitterConsumerKey}}",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterConsumerSecret}}",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessToken}}",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessTokenSecret}}",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "1.0",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "216285ef-2072-48cb-a756-553912582966",
                    "type": "text/javascript",
                    "exec": [
                      "",
                      ""
                    ],
                    "_lastExecutionId": "f57b97b6-700c-43bb-83e0-7c352cea68e0"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
                    "type": "text/javascript",
                    "exec": [
                      "// Check for OK response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "// Clear global state",
                      "pm.globals.clear('locationKey');",
                      "pm.globals.clear('locationName');",
                      "pm.globals.clear('twitterStatus');"
                    ],
                    "_lastExecutionId": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "name": "Air Quality",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "# Postman Air Quality Collection\n**Welcome to the Postman Air Quality Collection.**\nThis collection was created in response to the 2017 wildfires that devastated Northern California. The fires brought tragedy, and also caused hazardous ash and smoke pollution in the surrounding areas. As Postman has an office in San Francisco, we thought it was important to help our fellow Northern Californians and the rest of the world stay aware of the air quality in their surroundings.\n\nThis collection gets air quality updates from the AccuWeather API and posts them to Twitter according to your account and location specifications. \n\n\n## Technologies Used\n1. **Postman** - This collection utilizes [Postman Collections](https://www.getpostman.com/docs/postman/collections/creating_collections), [Postman Monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors), and [Postman Environments](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments).\n\n2. **AccuWeather API** - [AccuWeather’s API](https://developer.accuweather.com/home) allows users to obtain real weather data, including air quality data.\n\n  * **Using the AccuWeather API** - \n  To use AccuWeather’s API you will need to create an account and obtain a trial API key from their website. You can make up to 50 calls to the API per day on the trial, which should be enough to run this collection as an individual user.\n\n3. **Twitter** - We’ve chosen to use the [Twitter API](https://developer.twitter.com/en/docs/basics/getting-started)  as a platform to reach out to our community and spread the message about the state of the San Francisco air quality since the Northern California fires have started. You can configure your own Twitter account to post periodic air quality updates.\n\n  * **Using the Twitter API** - \n  To use Twitter’s API, you will need to create [a Twitter app](https://apps.twitter.com/) and get OAuth credentials.\n\n## Environment Variables\nYou need to set several environment variables before this collection will run:\n\n|Environment Variable Name |Description\n|--------------------------|--------------\n|`location`                |A string describing the location you would like to monitor\n|`accuweatherApiKey`       |An [AccuWeather API key](https://developer.accuweather.com/home)\n|`twitterConsumerKey`      |[A Twitter OAuth Consumer Key](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterConsumerSecret`   |[A Twitter OAuth Consumer Secret](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessToken`      |[A Twitter OAuth Access Token](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessSecret`     |[A Twitter OAuth Access Token Secret](https://developer.twitter.com/en/docs/basics/getting-started)",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2cecd83-1931-4219-af7c-0a2bb146fc56",
          "scriptId": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is OK",
          "message": "expected response to have status reason 'OK' but got 'UNAUTHORIZED'",
          "stack": "AssertionError: expected response to have status reason 'OK' but got 'UNAUTHORIZED'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "278c5ce45e4448c172295ef6fd91e0a9",
          "id": "9e298a06-a359-48df-9594-d8928005895e",
          "timestamp": 1656562778431,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
          "name": "Get Air Quality Status",
          "request": {
            "description": {
              "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "path": [
                "forecasts",
                "v1",
                "daily",
                "1day",
                "{{locationKey}}.json"
              ],
              "host": [
                "dataservice",
                "accuweather",
                "com"
              ],
              "query": [
                {
                  "key": "apikey",
                  "value": "{{accuweatherApiKey}}"
                },
                {
                  "key": "details",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
              "name": "AccuWeather Forecast",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Accept",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "*/*"
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": "origin, x-requested-with, accept"
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": "GET, PUT, POST, DELETE"
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "name": "Access-Control-Max-Age",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Max-Age",
                  "value": "3628800"
                },
                {
                  "name": "Cache-Control",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": "no-cache"
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                },
                {
                  "name": "Expires",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                },
                {
                  "name": "Postman-Token",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Postman-Token",
                  "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                },
                {
                  "name": "RateLimit-Limit",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Limit",
                  "value": "50"
                },
                {
                  "name": "RateLimit-Remaining",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Remaining",
                  "value": "31"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "Microsoft-IIS/10.0"
                },
                {
                  "name": "User-Agent",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "User-Agent",
                  "value": "PostmanRuntime/6.4.0"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Forwarded-For",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-For",
                  "value": "204.14.158.214"
                },
                {
                  "name": "X-Forwarded-Port",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Port",
                  "value": "80"
                },
                {
                  "name": "X-Forwarded-Proto",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Proto",
                  "value": "http"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "gzip"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "deflate"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                "type": "text/javascript",
                "exec": [
                  "// Validate environment variables",
                  "const pmEnvironment = pm.environment.toObject();",
                  "",
                  "// Check for required environment variables",
                  "pm.expect(pmEnvironment).to.have.all.keys(",
                  "    'location',",
                  "    'accuweatherApiKey',",
                  "    'twitterConsumerKey',",
                  "    'twitterConsumerSecret',",
                  "    'twitterAccessToken',",
                  "    'twitterAccessTokenSecret'",
                  ");",
                  "",
                  "// Get an accuweather location key",
                  "const apiKey = pm.environment.get('accuweatherApiKey');",
                  "const locationQuery = pm.environment.get('location');",
                  "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                  "",
                  "// Get and save location data from a location query string",
                  "function saveLocationData (e, response) {",
                  "    // Throw if we get an error",
                  "    if (e) { throw e; }",
                  "    ",
                  "    // Handle error response",
                  "    if (response.code >= 400) {",
                  "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                  "        console.log(response.text());",
                  "        ",
                  "        // Throw",
                  "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                  "    }",
                  "    ",
                  "    // Log location info and store the location information",
                  "    const responseData = response.json();",
                  "    ",
                  "    if (responseData.length > 1) {",
                  "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                  "    }",
                  "    ",
                  "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                  "    ",
                  "    pm.globals.set('locationKey', locationKey);",
                  "    pm.globals.set('locationName', locationName);",
                  "    ",
                  "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                  "}",
                  "",
                  "// Send the request to get location data",
                  "pm.sendRequest(getLocationData, saveLocationData);"
                ],
                "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                "type": "text/javascript",
                "exec": [
                  "// Test the response",
                  "pm.test('Status code is OK', () => {",
                  "    pm.response.to.be.ok;",
                  "});",
                  "",
                  "pm.test('Response has forecast data', () => {",
                  "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                  "});",
                  "",
                  "try {",
                  "    // Check for a non-error response code",
                  "    if (pm.response.code >= 400) {",
                  "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                  "",
                  "        throw new Error('Error response from API.');",
                  "    }",
                  "",
                  "    // Extract the air quality data",
                  "    const responseData = pm.response.json();",
                  "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                  "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                  "    const aqValue = airQuality.Value;",
                  "    const aqCategory = airQuality.Category;",
                  "    const locationName = pm.globals.get('locationName');",
                  "    ",
                  "    // Build the Twitter status",
                  "    const twitterStatus =",
                  "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                  "    ",
                  "    // Log the Twitter status",
                  "    console.log(`Twitter status :: ${twitterStatus}`);",
                  "    ",
                  "    // Assign status to a Twitter global",
                  "    pm.globals.set('twitterStatus', twitterStatus);",
                  "}",
                  "catch (e) {",
                  "    // The data probably didn't match the expected values",
                  "    console.log(`ERROR :: ${e.message}`);",
                  "    console.log(pm.response.text());",
                  "",
                  "    throw e;",
                  "}",
                  ""
                ],
                "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "exporter_id": "21628673"
          },
          "item": [
            {
              "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
              "name": "Get Air Quality Status",
              "request": {
                "description": {
                  "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
                  "name": "AccuWeather Forecast",
                  "originalRequest": {
                    "url": {
                      "protocol": "http",
                      "path": [
                        "forecasts",
                        "v1",
                        "daily",
                        "1day",
                        "{{locationKey}}.json"
                      ],
                      "host": [
                        "dataservice",
                        "accuweather",
                        "com"
                      ],
                      "query": [
                        {
                          "key": "apikey",
                          "value": "{{accuweatherApiKey}}"
                        },
                        {
                          "key": "details",
                          "value": "true"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Accept",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Accept",
                      "value": "*/*"
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": "origin, x-requested-with, accept"
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET, PUT, POST, DELETE"
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "name": "Access-Control-Max-Age",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Max-Age",
                      "value": "3628800"
                    },
                    {
                      "name": "Cache-Control",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Cache-Control",
                      "value": "no-cache"
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                    },
                    {
                      "name": "Expires",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Expires",
                      "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                    },
                    {
                      "name": "Postman-Token",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Postman-Token",
                      "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                    },
                    {
                      "name": "RateLimit-Limit",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Limit",
                      "value": "50"
                    },
                    {
                      "name": "RateLimit-Remaining",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Remaining",
                      "value": "31"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "Microsoft-IIS/10.0"
                    },
                    {
                      "name": "User-Agent",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "User-Agent",
                      "value": "PostmanRuntime/6.4.0"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Forwarded-For",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-For",
                      "value": "204.14.158.214"
                    },
                    {
                      "name": "X-Forwarded-Port",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Port",
                      "value": "80"
                    },
                    {
                      "name": "X-Forwarded-Proto",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Proto",
                      "value": "http"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "deflate"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                    "type": "text/javascript",
                    "exec": [
                      "// Validate environment variables",
                      "const pmEnvironment = pm.environment.toObject();",
                      "",
                      "// Check for required environment variables",
                      "pm.expect(pmEnvironment).to.have.all.keys(",
                      "    'location',",
                      "    'accuweatherApiKey',",
                      "    'twitterConsumerKey',",
                      "    'twitterConsumerSecret',",
                      "    'twitterAccessToken',",
                      "    'twitterAccessTokenSecret'",
                      ");",
                      "",
                      "// Get an accuweather location key",
                      "const apiKey = pm.environment.get('accuweatherApiKey');",
                      "const locationQuery = pm.environment.get('location');",
                      "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                      "",
                      "// Get and save location data from a location query string",
                      "function saveLocationData (e, response) {",
                      "    // Throw if we get an error",
                      "    if (e) { throw e; }",
                      "    ",
                      "    // Handle error response",
                      "    if (response.code >= 400) {",
                      "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                      "        console.log(response.text());",
                      "        ",
                      "        // Throw",
                      "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                      "    }",
                      "    ",
                      "    // Log location info and store the location information",
                      "    const responseData = response.json();",
                      "    ",
                      "    if (responseData.length > 1) {",
                      "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                      "    }",
                      "    ",
                      "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                      "    ",
                      "    pm.globals.set('locationKey', locationKey);",
                      "    pm.globals.set('locationName', locationName);",
                      "    ",
                      "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                      "}",
                      "",
                      "// Send the request to get location data",
                      "pm.sendRequest(getLocationData, saveLocationData);"
                    ],
                    "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                    "type": "text/javascript",
                    "exec": [
                      "// Test the response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "pm.test('Response has forecast data', () => {",
                      "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                      "});",
                      "",
                      "try {",
                      "    // Check for a non-error response code",
                      "    if (pm.response.code >= 400) {",
                      "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                      "",
                      "        throw new Error('Error response from API.');",
                      "    }",
                      "",
                      "    // Extract the air quality data",
                      "    const responseData = pm.response.json();",
                      "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                      "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                      "    const aqValue = airQuality.Value;",
                      "    const aqCategory = airQuality.Category;",
                      "    const locationName = pm.globals.get('locationName');",
                      "    ",
                      "    // Build the Twitter status",
                      "    const twitterStatus =",
                      "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                      "    ",
                      "    // Log the Twitter status",
                      "    console.log(`Twitter status :: ${twitterStatus}`);",
                      "    ",
                      "    // Assign status to a Twitter global",
                      "    pm.globals.set('twitterStatus', twitterStatus);",
                      "}",
                      "catch (e) {",
                      "    // The data probably didn't match the expected values",
                      "    console.log(`ERROR :: ${e.message}`);",
                      "    console.log(pm.response.text());",
                      "",
                      "    throw e;",
                      "}",
                      ""
                    ],
                    "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
                  }
                }
              ]
            },
            {
              "id": "0f0e5642-af31-4f75-a581-09952d55683c",
              "name": "Post Air Quality Status to Twitter",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1.1",
                    "statuses",
                    "update.json"
                  ],
                  "host": [
                    "api",
                    "twitter",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "{{twitterStatus}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "{{twitterConsumerKey}}",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterConsumerSecret}}",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessToken}}",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessTokenSecret}}",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "1.0",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "216285ef-2072-48cb-a756-553912582966",
                    "type": "text/javascript",
                    "exec": [
                      "",
                      ""
                    ],
                    "_lastExecutionId": "f57b97b6-700c-43bb-83e0-7c352cea68e0"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
                    "type": "text/javascript",
                    "exec": [
                      "// Check for OK response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "// Clear global state",
                      "pm.globals.clear('locationKey');",
                      "pm.globals.clear('locationName');",
                      "pm.globals.clear('twitterStatus');"
                    ],
                    "_lastExecutionId": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "name": "Air Quality",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "# Postman Air Quality Collection\n**Welcome to the Postman Air Quality Collection.**\nThis collection was created in response to the 2017 wildfires that devastated Northern California. The fires brought tragedy, and also caused hazardous ash and smoke pollution in the surrounding areas. As Postman has an office in San Francisco, we thought it was important to help our fellow Northern Californians and the rest of the world stay aware of the air quality in their surroundings.\n\nThis collection gets air quality updates from the AccuWeather API and posts them to Twitter according to your account and location specifications. \n\n\n## Technologies Used\n1. **Postman** - This collection utilizes [Postman Collections](https://www.getpostman.com/docs/postman/collections/creating_collections), [Postman Monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors), and [Postman Environments](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments).\n\n2. **AccuWeather API** - [AccuWeather’s API](https://developer.accuweather.com/home) allows users to obtain real weather data, including air quality data.\n\n  * **Using the AccuWeather API** - \n  To use AccuWeather’s API you will need to create an account and obtain a trial API key from their website. You can make up to 50 calls to the API per day on the trial, which should be enough to run this collection as an individual user.\n\n3. **Twitter** - We’ve chosen to use the [Twitter API](https://developer.twitter.com/en/docs/basics/getting-started)  as a platform to reach out to our community and spread the message about the state of the San Francisco air quality since the Northern California fires have started. You can configure your own Twitter account to post periodic air quality updates.\n\n  * **Using the Twitter API** - \n  To use Twitter’s API, you will need to create [a Twitter app](https://apps.twitter.com/) and get OAuth credentials.\n\n## Environment Variables\nYou need to set several environment variables before this collection will run:\n\n|Environment Variable Name |Description\n|--------------------------|--------------\n|`location`                |A string describing the location you would like to monitor\n|`accuweatherApiKey`       |An [AccuWeather API key](https://developer.accuweather.com/home)\n|`twitterConsumerKey`      |[A Twitter OAuth Consumer Key](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterConsumerSecret`   |[A Twitter OAuth Consumer Secret](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessToken`      |[A Twitter OAuth Access Token](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessSecret`     |[A Twitter OAuth Access Token Secret](https://developer.twitter.com/en/docs/basics/getting-started)",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2cecd83-1931-4219-af7c-0a2bb146fc56",
          "httpRequestId": "2e9bc0e5-8e96-44ae-896c-cb2c51f972c3",
          "scriptId": "77d93ae4-dc83-4992-9535-467e48d2b238",
          "execution": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response has forecast data",
          "message": "expected { Object (Code, Message, ...) } to have property 'DailyForecasts'",
          "stack": "AssertionError: expected { Object (Code, Message, ...) } to have property 'DailyForecasts'\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "476e9f8366b9c1aa08201051ab317217",
          "id": "be1fc541-9d20-4733-8f0c-9b3e538949dd",
          "timestamp": 1656562778435,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
          "name": "Get Air Quality Status",
          "request": {
            "description": {
              "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "path": [
                "forecasts",
                "v1",
                "daily",
                "1day",
                "{{locationKey}}.json"
              ],
              "host": [
                "dataservice",
                "accuweather",
                "com"
              ],
              "query": [
                {
                  "key": "apikey",
                  "value": "{{accuweatherApiKey}}"
                },
                {
                  "key": "details",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
              "name": "AccuWeather Forecast",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Accept",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "*/*"
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": "origin, x-requested-with, accept"
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": "GET, PUT, POST, DELETE"
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "name": "Access-Control-Max-Age",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Max-Age",
                  "value": "3628800"
                },
                {
                  "name": "Cache-Control",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": "no-cache"
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                },
                {
                  "name": "Expires",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                },
                {
                  "name": "Postman-Token",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Postman-Token",
                  "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                },
                {
                  "name": "RateLimit-Limit",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Limit",
                  "value": "50"
                },
                {
                  "name": "RateLimit-Remaining",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Remaining",
                  "value": "31"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "Microsoft-IIS/10.0"
                },
                {
                  "name": "User-Agent",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "User-Agent",
                  "value": "PostmanRuntime/6.4.0"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Forwarded-For",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-For",
                  "value": "204.14.158.214"
                },
                {
                  "name": "X-Forwarded-Port",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Port",
                  "value": "80"
                },
                {
                  "name": "X-Forwarded-Proto",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Proto",
                  "value": "http"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "gzip"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "deflate"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                "type": "text/javascript",
                "exec": [
                  "// Validate environment variables",
                  "const pmEnvironment = pm.environment.toObject();",
                  "",
                  "// Check for required environment variables",
                  "pm.expect(pmEnvironment).to.have.all.keys(",
                  "    'location',",
                  "    'accuweatherApiKey',",
                  "    'twitterConsumerKey',",
                  "    'twitterConsumerSecret',",
                  "    'twitterAccessToken',",
                  "    'twitterAccessTokenSecret'",
                  ");",
                  "",
                  "// Get an accuweather location key",
                  "const apiKey = pm.environment.get('accuweatherApiKey');",
                  "const locationQuery = pm.environment.get('location');",
                  "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                  "",
                  "// Get and save location data from a location query string",
                  "function saveLocationData (e, response) {",
                  "    // Throw if we get an error",
                  "    if (e) { throw e; }",
                  "    ",
                  "    // Handle error response",
                  "    if (response.code >= 400) {",
                  "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                  "        console.log(response.text());",
                  "        ",
                  "        // Throw",
                  "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                  "    }",
                  "    ",
                  "    // Log location info and store the location information",
                  "    const responseData = response.json();",
                  "    ",
                  "    if (responseData.length > 1) {",
                  "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                  "    }",
                  "    ",
                  "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                  "    ",
                  "    pm.globals.set('locationKey', locationKey);",
                  "    pm.globals.set('locationName', locationName);",
                  "    ",
                  "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                  "}",
                  "",
                  "// Send the request to get location data",
                  "pm.sendRequest(getLocationData, saveLocationData);"
                ],
                "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                "type": "text/javascript",
                "exec": [
                  "// Test the response",
                  "pm.test('Status code is OK', () => {",
                  "    pm.response.to.be.ok;",
                  "});",
                  "",
                  "pm.test('Response has forecast data', () => {",
                  "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                  "});",
                  "",
                  "try {",
                  "    // Check for a non-error response code",
                  "    if (pm.response.code >= 400) {",
                  "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                  "",
                  "        throw new Error('Error response from API.');",
                  "    }",
                  "",
                  "    // Extract the air quality data",
                  "    const responseData = pm.response.json();",
                  "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                  "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                  "    const aqValue = airQuality.Value;",
                  "    const aqCategory = airQuality.Category;",
                  "    const locationName = pm.globals.get('locationName');",
                  "    ",
                  "    // Build the Twitter status",
                  "    const twitterStatus =",
                  "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                  "    ",
                  "    // Log the Twitter status",
                  "    console.log(`Twitter status :: ${twitterStatus}`);",
                  "    ",
                  "    // Assign status to a Twitter global",
                  "    pm.globals.set('twitterStatus', twitterStatus);",
                  "}",
                  "catch (e) {",
                  "    // The data probably didn't match the expected values",
                  "    console.log(`ERROR :: ${e.message}`);",
                  "    console.log(pm.response.text());",
                  "",
                  "    throw e;",
                  "}",
                  ""
                ],
                "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "exporter_id": "21628673"
          },
          "item": [
            {
              "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
              "name": "Get Air Quality Status",
              "request": {
                "description": {
                  "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
                  "name": "AccuWeather Forecast",
                  "originalRequest": {
                    "url": {
                      "protocol": "http",
                      "path": [
                        "forecasts",
                        "v1",
                        "daily",
                        "1day",
                        "{{locationKey}}.json"
                      ],
                      "host": [
                        "dataservice",
                        "accuweather",
                        "com"
                      ],
                      "query": [
                        {
                          "key": "apikey",
                          "value": "{{accuweatherApiKey}}"
                        },
                        {
                          "key": "details",
                          "value": "true"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Accept",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Accept",
                      "value": "*/*"
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": "origin, x-requested-with, accept"
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET, PUT, POST, DELETE"
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "name": "Access-Control-Max-Age",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Max-Age",
                      "value": "3628800"
                    },
                    {
                      "name": "Cache-Control",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Cache-Control",
                      "value": "no-cache"
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                    },
                    {
                      "name": "Expires",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Expires",
                      "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                    },
                    {
                      "name": "Postman-Token",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Postman-Token",
                      "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                    },
                    {
                      "name": "RateLimit-Limit",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Limit",
                      "value": "50"
                    },
                    {
                      "name": "RateLimit-Remaining",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Remaining",
                      "value": "31"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "Microsoft-IIS/10.0"
                    },
                    {
                      "name": "User-Agent",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "User-Agent",
                      "value": "PostmanRuntime/6.4.0"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Forwarded-For",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-For",
                      "value": "204.14.158.214"
                    },
                    {
                      "name": "X-Forwarded-Port",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Port",
                      "value": "80"
                    },
                    {
                      "name": "X-Forwarded-Proto",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Proto",
                      "value": "http"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "deflate"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                    "type": "text/javascript",
                    "exec": [
                      "// Validate environment variables",
                      "const pmEnvironment = pm.environment.toObject();",
                      "",
                      "// Check for required environment variables",
                      "pm.expect(pmEnvironment).to.have.all.keys(",
                      "    'location',",
                      "    'accuweatherApiKey',",
                      "    'twitterConsumerKey',",
                      "    'twitterConsumerSecret',",
                      "    'twitterAccessToken',",
                      "    'twitterAccessTokenSecret'",
                      ");",
                      "",
                      "// Get an accuweather location key",
                      "const apiKey = pm.environment.get('accuweatherApiKey');",
                      "const locationQuery = pm.environment.get('location');",
                      "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                      "",
                      "// Get and save location data from a location query string",
                      "function saveLocationData (e, response) {",
                      "    // Throw if we get an error",
                      "    if (e) { throw e; }",
                      "    ",
                      "    // Handle error response",
                      "    if (response.code >= 400) {",
                      "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                      "        console.log(response.text());",
                      "        ",
                      "        // Throw",
                      "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                      "    }",
                      "    ",
                      "    // Log location info and store the location information",
                      "    const responseData = response.json();",
                      "    ",
                      "    if (responseData.length > 1) {",
                      "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                      "    }",
                      "    ",
                      "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                      "    ",
                      "    pm.globals.set('locationKey', locationKey);",
                      "    pm.globals.set('locationName', locationName);",
                      "    ",
                      "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                      "}",
                      "",
                      "// Send the request to get location data",
                      "pm.sendRequest(getLocationData, saveLocationData);"
                    ],
                    "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                    "type": "text/javascript",
                    "exec": [
                      "// Test the response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "pm.test('Response has forecast data', () => {",
                      "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                      "});",
                      "",
                      "try {",
                      "    // Check for a non-error response code",
                      "    if (pm.response.code >= 400) {",
                      "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                      "",
                      "        throw new Error('Error response from API.');",
                      "    }",
                      "",
                      "    // Extract the air quality data",
                      "    const responseData = pm.response.json();",
                      "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                      "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                      "    const aqValue = airQuality.Value;",
                      "    const aqCategory = airQuality.Category;",
                      "    const locationName = pm.globals.get('locationName');",
                      "    ",
                      "    // Build the Twitter status",
                      "    const twitterStatus =",
                      "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                      "    ",
                      "    // Log the Twitter status",
                      "    console.log(`Twitter status :: ${twitterStatus}`);",
                      "    ",
                      "    // Assign status to a Twitter global",
                      "    pm.globals.set('twitterStatus', twitterStatus);",
                      "}",
                      "catch (e) {",
                      "    // The data probably didn't match the expected values",
                      "    console.log(`ERROR :: ${e.message}`);",
                      "    console.log(pm.response.text());",
                      "",
                      "    throw e;",
                      "}",
                      ""
                    ],
                    "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
                  }
                }
              ]
            },
            {
              "id": "0f0e5642-af31-4f75-a581-09952d55683c",
              "name": "Post Air Quality Status to Twitter",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1.1",
                    "statuses",
                    "update.json"
                  ],
                  "host": [
                    "api",
                    "twitter",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "{{twitterStatus}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "{{twitterConsumerKey}}",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterConsumerSecret}}",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessToken}}",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessTokenSecret}}",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "1.0",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "216285ef-2072-48cb-a756-553912582966",
                    "type": "text/javascript",
                    "exec": [
                      "",
                      ""
                    ],
                    "_lastExecutionId": "f57b97b6-700c-43bb-83e0-7c352cea68e0"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
                    "type": "text/javascript",
                    "exec": [
                      "// Check for OK response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "// Clear global state",
                      "pm.globals.clear('locationKey');",
                      "pm.globals.clear('locationName');",
                      "pm.globals.clear('twitterStatus');"
                    ],
                    "_lastExecutionId": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "name": "Air Quality",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "# Postman Air Quality Collection\n**Welcome to the Postman Air Quality Collection.**\nThis collection was created in response to the 2017 wildfires that devastated Northern California. The fires brought tragedy, and also caused hazardous ash and smoke pollution in the surrounding areas. As Postman has an office in San Francisco, we thought it was important to help our fellow Northern Californians and the rest of the world stay aware of the air quality in their surroundings.\n\nThis collection gets air quality updates from the AccuWeather API and posts them to Twitter according to your account and location specifications. \n\n\n## Technologies Used\n1. **Postman** - This collection utilizes [Postman Collections](https://www.getpostman.com/docs/postman/collections/creating_collections), [Postman Monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors), and [Postman Environments](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments).\n\n2. **AccuWeather API** - [AccuWeather’s API](https://developer.accuweather.com/home) allows users to obtain real weather data, including air quality data.\n\n  * **Using the AccuWeather API** - \n  To use AccuWeather’s API you will need to create an account and obtain a trial API key from their website. You can make up to 50 calls to the API per day on the trial, which should be enough to run this collection as an individual user.\n\n3. **Twitter** - We’ve chosen to use the [Twitter API](https://developer.twitter.com/en/docs/basics/getting-started)  as a platform to reach out to our community and spread the message about the state of the San Francisco air quality since the Northern California fires have started. You can configure your own Twitter account to post periodic air quality updates.\n\n  * **Using the Twitter API** - \n  To use Twitter’s API, you will need to create [a Twitter app](https://apps.twitter.com/) and get OAuth credentials.\n\n## Environment Variables\nYou need to set several environment variables before this collection will run:\n\n|Environment Variable Name |Description\n|--------------------------|--------------\n|`location`                |A string describing the location you would like to monitor\n|`accuweatherApiKey`       |An [AccuWeather API key](https://developer.accuweather.com/home)\n|`twitterConsumerKey`      |[A Twitter OAuth Consumer Key](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterConsumerSecret`   |[A Twitter OAuth Consumer Secret](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessToken`      |[A Twitter OAuth Access Token](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessSecret`     |[A Twitter OAuth Access Token Secret](https://developer.twitter.com/en/docs/basics/getting-started)",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2cecd83-1931-4219-af7c-0a2bb146fc56",
          "httpRequestId": "2e9bc0e5-8e96-44ae-896c-cb2c51f972c3",
          "scriptId": "77d93ae4-dc83-4992-9535-467e48d2b238",
          "execution": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "Error",
          "message": "Error response from API.",
          "checksum": "f913c74359595d7b2b63b46c74ff0085",
          "id": "8ba93fa0-30fe-4428-842a-e2b55b851556",
          "timestamp": 1656562778447,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
          "name": "Get Air Quality Status",
          "request": {
            "description": {
              "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
              "type": "text/plain"
            },
            "url": {
              "protocol": "http",
              "path": [
                "forecasts",
                "v1",
                "daily",
                "1day",
                "{{locationKey}}.json"
              ],
              "host": [
                "dataservice",
                "accuweather",
                "com"
              ],
              "query": [
                {
                  "key": "apikey",
                  "value": "{{accuweatherApiKey}}"
                },
                {
                  "key": "details",
                  "value": "true"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
              "name": "AccuWeather Forecast",
              "originalRequest": {
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Accept",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Accept",
                  "value": "*/*"
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": "origin, x-requested-with, accept"
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": "GET, PUT, POST, DELETE"
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "name": "Access-Control-Max-Age",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Max-Age",
                  "value": "3628800"
                },
                {
                  "name": "Cache-Control",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Cache-Control",
                  "value": "no-cache"
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                },
                {
                  "name": "Expires",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Expires",
                  "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                },
                {
                  "name": "Postman-Token",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Postman-Token",
                  "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                },
                {
                  "name": "RateLimit-Limit",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Limit",
                  "value": "50"
                },
                {
                  "name": "RateLimit-Remaining",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "RateLimit-Remaining",
                  "value": "31"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "Microsoft-IIS/10.0"
                },
                {
                  "name": "User-Agent",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "User-Agent",
                  "value": "PostmanRuntime/6.4.0"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Forwarded-For",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-For",
                  "value": "204.14.158.214"
                },
                {
                  "name": "X-Forwarded-Port",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Port",
                  "value": "80"
                },
                {
                  "name": "X-Forwarded-Proto",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Forwarded-Proto",
                  "value": "http"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "gzip"
                },
                {
                  "name": "accept-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "accept-encoding",
                  "value": "deflate"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                "type": "text/javascript",
                "exec": [
                  "// Validate environment variables",
                  "const pmEnvironment = pm.environment.toObject();",
                  "",
                  "// Check for required environment variables",
                  "pm.expect(pmEnvironment).to.have.all.keys(",
                  "    'location',",
                  "    'accuweatherApiKey',",
                  "    'twitterConsumerKey',",
                  "    'twitterConsumerSecret',",
                  "    'twitterAccessToken',",
                  "    'twitterAccessTokenSecret'",
                  ");",
                  "",
                  "// Get an accuweather location key",
                  "const apiKey = pm.environment.get('accuweatherApiKey');",
                  "const locationQuery = pm.environment.get('location');",
                  "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                  "",
                  "// Get and save location data from a location query string",
                  "function saveLocationData (e, response) {",
                  "    // Throw if we get an error",
                  "    if (e) { throw e; }",
                  "    ",
                  "    // Handle error response",
                  "    if (response.code >= 400) {",
                  "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                  "        console.log(response.text());",
                  "        ",
                  "        // Throw",
                  "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                  "    }",
                  "    ",
                  "    // Log location info and store the location information",
                  "    const responseData = response.json();",
                  "    ",
                  "    if (responseData.length > 1) {",
                  "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                  "    }",
                  "    ",
                  "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                  "    ",
                  "    pm.globals.set('locationKey', locationKey);",
                  "    pm.globals.set('locationName', locationName);",
                  "    ",
                  "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                  "}",
                  "",
                  "// Send the request to get location data",
                  "pm.sendRequest(getLocationData, saveLocationData);"
                ],
                "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                "type": "text/javascript",
                "exec": [
                  "// Test the response",
                  "pm.test('Status code is OK', () => {",
                  "    pm.response.to.be.ok;",
                  "});",
                  "",
                  "pm.test('Response has forecast data', () => {",
                  "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                  "});",
                  "",
                  "try {",
                  "    // Check for a non-error response code",
                  "    if (pm.response.code >= 400) {",
                  "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                  "",
                  "        throw new Error('Error response from API.');",
                  "    }",
                  "",
                  "    // Extract the air quality data",
                  "    const responseData = pm.response.json();",
                  "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                  "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                  "    const aqValue = airQuality.Value;",
                  "    const aqCategory = airQuality.Category;",
                  "    const locationName = pm.globals.get('locationName');",
                  "    ",
                  "    // Build the Twitter status",
                  "    const twitterStatus =",
                  "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                  "    ",
                  "    // Log the Twitter status",
                  "    console.log(`Twitter status :: ${twitterStatus}`);",
                  "    ",
                  "    // Assign status to a Twitter global",
                  "    pm.globals.set('twitterStatus', twitterStatus);",
                  "}",
                  "catch (e) {",
                  "    // The data probably didn't match the expected values",
                  "    console.log(`ERROR :: ${e.message}`);",
                  "    console.log(pm.response.text());",
                  "",
                  "    throw e;",
                  "}",
                  ""
                ],
                "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "exporter_id": "21628673"
          },
          "item": [
            {
              "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
              "name": "Get Air Quality Status",
              "request": {
                "description": {
                  "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
                  "name": "AccuWeather Forecast",
                  "originalRequest": {
                    "url": {
                      "protocol": "http",
                      "path": [
                        "forecasts",
                        "v1",
                        "daily",
                        "1day",
                        "{{locationKey}}.json"
                      ],
                      "host": [
                        "dataservice",
                        "accuweather",
                        "com"
                      ],
                      "query": [
                        {
                          "key": "apikey",
                          "value": "{{accuweatherApiKey}}"
                        },
                        {
                          "key": "details",
                          "value": "true"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Accept",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Accept",
                      "value": "*/*"
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": "origin, x-requested-with, accept"
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET, PUT, POST, DELETE"
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "name": "Access-Control-Max-Age",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Max-Age",
                      "value": "3628800"
                    },
                    {
                      "name": "Cache-Control",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Cache-Control",
                      "value": "no-cache"
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                    },
                    {
                      "name": "Expires",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Expires",
                      "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                    },
                    {
                      "name": "Postman-Token",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Postman-Token",
                      "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                    },
                    {
                      "name": "RateLimit-Limit",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Limit",
                      "value": "50"
                    },
                    {
                      "name": "RateLimit-Remaining",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Remaining",
                      "value": "31"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "Microsoft-IIS/10.0"
                    },
                    {
                      "name": "User-Agent",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "User-Agent",
                      "value": "PostmanRuntime/6.4.0"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Forwarded-For",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-For",
                      "value": "204.14.158.214"
                    },
                    {
                      "name": "X-Forwarded-Port",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Port",
                      "value": "80"
                    },
                    {
                      "name": "X-Forwarded-Proto",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Proto",
                      "value": "http"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "deflate"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                    "type": "text/javascript",
                    "exec": [
                      "// Validate environment variables",
                      "const pmEnvironment = pm.environment.toObject();",
                      "",
                      "// Check for required environment variables",
                      "pm.expect(pmEnvironment).to.have.all.keys(",
                      "    'location',",
                      "    'accuweatherApiKey',",
                      "    'twitterConsumerKey',",
                      "    'twitterConsumerSecret',",
                      "    'twitterAccessToken',",
                      "    'twitterAccessTokenSecret'",
                      ");",
                      "",
                      "// Get an accuweather location key",
                      "const apiKey = pm.environment.get('accuweatherApiKey');",
                      "const locationQuery = pm.environment.get('location');",
                      "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                      "",
                      "// Get and save location data from a location query string",
                      "function saveLocationData (e, response) {",
                      "    // Throw if we get an error",
                      "    if (e) { throw e; }",
                      "    ",
                      "    // Handle error response",
                      "    if (response.code >= 400) {",
                      "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                      "        console.log(response.text());",
                      "        ",
                      "        // Throw",
                      "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                      "    }",
                      "    ",
                      "    // Log location info and store the location information",
                      "    const responseData = response.json();",
                      "    ",
                      "    if (responseData.length > 1) {",
                      "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                      "    }",
                      "    ",
                      "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                      "    ",
                      "    pm.globals.set('locationKey', locationKey);",
                      "    pm.globals.set('locationName', locationName);",
                      "    ",
                      "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                      "}",
                      "",
                      "// Send the request to get location data",
                      "pm.sendRequest(getLocationData, saveLocationData);"
                    ],
                    "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                    "type": "text/javascript",
                    "exec": [
                      "// Test the response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "pm.test('Response has forecast data', () => {",
                      "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                      "});",
                      "",
                      "try {",
                      "    // Check for a non-error response code",
                      "    if (pm.response.code >= 400) {",
                      "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                      "",
                      "        throw new Error('Error response from API.');",
                      "    }",
                      "",
                      "    // Extract the air quality data",
                      "    const responseData = pm.response.json();",
                      "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                      "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                      "    const aqValue = airQuality.Value;",
                      "    const aqCategory = airQuality.Category;",
                      "    const locationName = pm.globals.get('locationName');",
                      "    ",
                      "    // Build the Twitter status",
                      "    const twitterStatus =",
                      "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                      "    ",
                      "    // Log the Twitter status",
                      "    console.log(`Twitter status :: ${twitterStatus}`);",
                      "    ",
                      "    // Assign status to a Twitter global",
                      "    pm.globals.set('twitterStatus', twitterStatus);",
                      "}",
                      "catch (e) {",
                      "    // The data probably didn't match the expected values",
                      "    console.log(`ERROR :: ${e.message}`);",
                      "    console.log(pm.response.text());",
                      "",
                      "    throw e;",
                      "}",
                      ""
                    ],
                    "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
                  }
                }
              ]
            },
            {
              "id": "0f0e5642-af31-4f75-a581-09952d55683c",
              "name": "Post Air Quality Status to Twitter",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1.1",
                    "statuses",
                    "update.json"
                  ],
                  "host": [
                    "api",
                    "twitter",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "{{twitterStatus}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "{{twitterConsumerKey}}",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterConsumerSecret}}",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessToken}}",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessTokenSecret}}",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "1.0",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "216285ef-2072-48cb-a756-553912582966",
                    "type": "text/javascript",
                    "exec": [
                      "",
                      ""
                    ],
                    "_lastExecutionId": "f57b97b6-700c-43bb-83e0-7c352cea68e0"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
                    "type": "text/javascript",
                    "exec": [
                      "// Check for OK response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "// Clear global state",
                      "pm.globals.clear('locationKey');",
                      "pm.globals.clear('locationName');",
                      "pm.globals.clear('twitterStatus');"
                    ],
                    "_lastExecutionId": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "name": "Air Quality",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "# Postman Air Quality Collection\n**Welcome to the Postman Air Quality Collection.**\nThis collection was created in response to the 2017 wildfires that devastated Northern California. The fires brought tragedy, and also caused hazardous ash and smoke pollution in the surrounding areas. As Postman has an office in San Francisco, we thought it was important to help our fellow Northern Californians and the rest of the world stay aware of the air quality in their surroundings.\n\nThis collection gets air quality updates from the AccuWeather API and posts them to Twitter according to your account and location specifications. \n\n\n## Technologies Used\n1. **Postman** - This collection utilizes [Postman Collections](https://www.getpostman.com/docs/postman/collections/creating_collections), [Postman Monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors), and [Postman Environments](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments).\n\n2. **AccuWeather API** - [AccuWeather’s API](https://developer.accuweather.com/home) allows users to obtain real weather data, including air quality data.\n\n  * **Using the AccuWeather API** - \n  To use AccuWeather’s API you will need to create an account and obtain a trial API key from their website. You can make up to 50 calls to the API per day on the trial, which should be enough to run this collection as an individual user.\n\n3. **Twitter** - We’ve chosen to use the [Twitter API](https://developer.twitter.com/en/docs/basics/getting-started)  as a platform to reach out to our community and spread the message about the state of the San Francisco air quality since the Northern California fires have started. You can configure your own Twitter account to post periodic air quality updates.\n\n  * **Using the Twitter API** - \n  To use Twitter’s API, you will need to create [a Twitter app](https://apps.twitter.com/) and get OAuth credentials.\n\n## Environment Variables\nYou need to set several environment variables before this collection will run:\n\n|Environment Variable Name |Description\n|--------------------------|--------------\n|`location`                |A string describing the location you would like to monitor\n|`accuweatherApiKey`       |An [AccuWeather API key](https://developer.accuweather.com/home)\n|`twitterConsumerKey`      |[A Twitter OAuth Consumer Key](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterConsumerSecret`   |[A Twitter OAuth Consumer Secret](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessToken`      |[A Twitter OAuth Access Token](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessSecret`     |[A Twitter OAuth Access Token Secret](https://developer.twitter.com/en/docs/basics/getting-started)",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f2cecd83-1931-4219-af7c-0a2bb146fc56",
          "httpRequestId": "2e9bc0e5-8e96-44ae-896c-cb2c51f972c3",
          "scriptId": "77d93ae4-dc83-4992-9535-467e48d2b238"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is OK",
          "message": "expected response to have status reason 'OK' but got 'UNAUTHORIZED'",
          "stack": "AssertionError: expected response to have status reason 'OK' but got 'UNAUTHORIZED'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "4005032504f594065c636a31ad818c27",
          "id": "6132644c-4f39-45fa-9737-a5f61ee37798",
          "timestamp": 1656562779278,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0f0e5642-af31-4f75-a581-09952d55683c",
          "name": "Post Air Quality Status to Twitter",
          "request": {
            "url": {
              "protocol": "https",
              "path": [
                "1.1",
                "statuses",
                "update.json"
              ],
              "host": [
                "api",
                "twitter",
                "com"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{twitterStatus}}"
                }
              ],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": []
            },
            "auth": {
              "type": "oauth1",
              "oauth1": [
                {
                  "type": "string",
                  "value": "{{twitterConsumerKey}}",
                  "key": "consumerKey"
                },
                {
                  "type": "string",
                  "value": "{{twitterConsumerSecret}}",
                  "key": "consumerSecret"
                },
                {
                  "type": "string",
                  "value": "{{twitterAccessToken}}",
                  "key": "token"
                },
                {
                  "type": "string",
                  "value": "{{twitterAccessTokenSecret}}",
                  "key": "tokenSecret"
                },
                {
                  "type": "string",
                  "value": "HMAC-SHA1",
                  "key": "signatureMethod"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "1.0",
                  "key": "version"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "realm"
                },
                {
                  "type": "boolean",
                  "value": true,
                  "key": "addParamsToHeader"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "addEmptyParamsToSign"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "216285ef-2072-48cb-a756-553912582966",
                "type": "text/javascript",
                "exec": [
                  "",
                  ""
                ],
                "_lastExecutionId": "f57b97b6-700c-43bb-83e0-7c352cea68e0"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
                "type": "text/javascript",
                "exec": [
                  "// Check for OK response",
                  "pm.test('Status code is OK', () => {",
                  "    pm.response.to.be.ok;",
                  "});",
                  "",
                  "// Clear global state",
                  "pm.globals.clear('locationKey');",
                  "pm.globals.clear('locationName');",
                  "pm.globals.clear('twitterStatus');"
                ],
                "_lastExecutionId": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "exporter_id": "21628673"
          },
          "item": [
            {
              "id": "8c302080-4379-4fcc-8b81-47cfd4b5be16",
              "name": "Get Air Quality Status",
              "request": {
                "description": {
                  "content": "Get air quality data from the [AccuWeather API](https://developer.accuweather.com/).",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "http",
                  "path": [
                    "forecasts",
                    "v1",
                    "daily",
                    "1day",
                    "{{locationKey}}.json"
                  ],
                  "host": [
                    "dataservice",
                    "accuweather",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "apikey",
                      "value": "{{accuweatherApiKey}}"
                    },
                    {
                      "key": "details",
                      "value": "true"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "17bc3291-0a95-4c48-9977-7631d0cbee7a",
                  "name": "AccuWeather Forecast",
                  "originalRequest": {
                    "url": {
                      "protocol": "http",
                      "path": [
                        "forecasts",
                        "v1",
                        "daily",
                        "1day",
                        "{{locationKey}}.json"
                      ],
                      "host": [
                        "dataservice",
                        "accuweather",
                        "com"
                      ],
                      "query": [
                        {
                          "key": "apikey",
                          "value": "{{accuweatherApiKey}}"
                        },
                        {
                          "key": "details",
                          "value": "true"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Accept",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Accept",
                      "value": "*/*"
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": "origin, x-requested-with, accept"
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET, PUT, POST, DELETE"
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "name": "Access-Control-Max-Age",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Max-Age",
                      "value": "3628800"
                    },
                    {
                      "name": "Cache-Control",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Cache-Control",
                      "value": "no-cache"
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Fri, 13 Oct 2017 19:58:03 GMT"
                    },
                    {
                      "name": "Expires",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Expires",
                      "value": "Fri, 13 Oct 2017 20:18:02 GMT"
                    },
                    {
                      "name": "Postman-Token",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Postman-Token",
                      "value": "a3a18946-c1dc-4080-a677-ec16d3d60999"
                    },
                    {
                      "name": "RateLimit-Limit",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Limit",
                      "value": "50"
                    },
                    {
                      "name": "RateLimit-Remaining",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "RateLimit-Remaining",
                      "value": "31"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "Microsoft-IIS/10.0"
                    },
                    {
                      "name": "User-Agent",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "User-Agent",
                      "value": "PostmanRuntime/6.4.0"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Forwarded-For",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-For",
                      "value": "204.14.158.214"
                    },
                    {
                      "name": "X-Forwarded-Port",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Port",
                      "value": "80"
                    },
                    {
                      "name": "X-Forwarded-Proto",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Forwarded-Proto",
                      "value": "http"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "accept-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "accept-encoding",
                      "value": "deflate"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"Headline\":{\"EffectiveDate\":\"2017-10-13T08:00:00-07:00\",\"EffectiveEpochDate\":1507906800,\"Severity\":7,\"Text\":\"Smoky today to tomorrow\",\"Category\":\"smoke\",\"EndDate\":\"2017-10-14T20:00:00-07:00\",\"EndEpochDate\":1508036400,\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/extended-weather-forecast/347629?lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?lang=en-us\"},\"DailyForecasts\":[{\"Date\":\"2017-10-13T07:00:00-07:00\",\"EpochDate\":1507903200,\"Sun\":{\"Rise\":\"2017-10-13T07:16:00-07:00\",\"EpochRise\":1507904160,\"Set\":\"2017-10-13T18:35:00-07:00\",\"EpochSet\":1507944900},\"Moon\":{\"Rise\":\"2017-10-13T00:53:00-07:00\",\"EpochRise\":1507881180,\"Set\":\"2017-10-13T15:17:00-07:00\",\"EpochSet\":1507933020,\"Phase\":\"WaningCrescent\",\"Age\":23},\"Temperature\":{\"Minimum\":{\"Value\":53.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":68.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperature\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":74.0,\"Unit\":\"F\",\"UnitType\":18}},\"RealFeelTemperatureShade\":{\"Minimum\":{\"Value\":50.0,\"Unit\":\"F\",\"UnitType\":18},\"Maximum\":{\"Value\":65.0,\"Unit\":\"F\",\"UnitType\":18}},\"HoursOfSun\":12.1,\"DegreeDaySummary\":{\"Heating\":{\"Value\":4.0,\"Unit\":\"F\",\"UnitType\":18},\"Cooling\":{\"Value\":0.0,\"Unit\":\"F\",\"UnitType\":18}},\"AirAndPollen\":[{\"Name\":\"AirQuality\",\"Value\":158,\"Category\":\"Unhealthy\",\"CategoryValue\":4,\"Type\":\"Particle Pollution\"},{\"Name\":\"Grass\",\"Value\":2,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Mold\",\"Value\":0,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Ragweed\",\"Value\":5,\"Category\":\"Low\",\"CategoryValue\":1},{\"Name\":\"Tree\",\"Value\":50,\"Category\":\"Moderate\",\"CategoryValue\":2},{\"Name\":\"UVIndex\",\"Value\":12,\"Category\":\"Extreme\",\"CategoryValue\":5}],\"Day\":{\"Icon\":2,\"IconPhrase\":\"Mostly sunny\",\"ShortPhrase\":\"Hazy sunshine\",\"LongPhrase\":\"Smoky with hazy sunshine; breezy this afternoon\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":11.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":289,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"WindGust\":{\"Speed\":{\"Value\":26.5,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":299,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":21},\"Night\":{\"Icon\":33,\"IconPhrase\":\"Clear\",\"ShortPhrase\":\"Clear\",\"LongPhrase\":\"Clear\",\"PrecipitationProbability\":0,\"ThunderstormProbability\":1,\"RainProbability\":0,\"SnowProbability\":0,\"IceProbability\":0,\"Wind\":{\"Speed\":{\"Value\":5.8,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":314,\"Localized\":\"NW\",\"English\":\"NW\"}},\"WindGust\":{\"Speed\":{\"Value\":17.3,\"Unit\":\"mi/h\",\"UnitType\":9},\"Direction\":{\"Degrees\":300,\"Localized\":\"WNW\",\"English\":\"WNW\"}},\"TotalLiquid\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Rain\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Snow\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"Ice\":{\"Value\":0.0,\"Unit\":\"in\",\"UnitType\":1},\"HoursOfPrecipitation\":0.0,\"HoursOfRain\":0.0,\"HoursOfSnow\":0.0,\"HoursOfIce\":0.0,\"CloudCover\":0},\"Sources\":[\"AccuWeather\"],\"MobileLink\":\"http://m.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\",\"Link\":\"http://www.accuweather.com/en/us/san-francisco-ca/94103/daily-weather-forecast/347629?day=1&lang=en-us\"}]}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "6ea7e0d6-b4c1-483f-b3c9-7ce42805daf5",
                    "type": "text/javascript",
                    "exec": [
                      "// Validate environment variables",
                      "const pmEnvironment = pm.environment.toObject();",
                      "",
                      "// Check for required environment variables",
                      "pm.expect(pmEnvironment).to.have.all.keys(",
                      "    'location',",
                      "    'accuweatherApiKey',",
                      "    'twitterConsumerKey',",
                      "    'twitterConsumerSecret',",
                      "    'twitterAccessToken',",
                      "    'twitterAccessTokenSecret'",
                      ");",
                      "",
                      "// Get an accuweather location key",
                      "const apiKey = pm.environment.get('accuweatherApiKey');",
                      "const locationQuery = pm.environment.get('location');",
                      "const getLocationData = `http://dataservice.accuweather.com/locations/v1/search?apikey=${apiKey}&q=${locationQuery}`;",
                      "",
                      "// Get and save location data from a location query string",
                      "function saveLocationData (e, response) {",
                      "    // Throw if we get an error",
                      "    if (e) { throw e; }",
                      "    ",
                      "    // Handle error response",
                      "    if (response.code >= 400) {",
                      "        console.log(`PROBLEM :: ${response.code} error while getting location.`);",
                      "        console.log(response.text());",
                      "        ",
                      "        // Throw",
                      "        throw new Error(`Couldn\\'t get location. Check your environment's location value.`);",
                      "    }",
                      "    ",
                      "    // Log location info and store the location information",
                      "    const responseData = response.json();",
                      "    ",
                      "    if (responseData.length > 1) {",
                      "        console.log('WARNING :: Query returned multiple results. Returning the first result.');",
                      "    }",
                      "    ",
                      "    const [{ Key: locationKey, EnglishName: locationName }] = responseData;",
                      "    ",
                      "    pm.globals.set('locationKey', locationKey);",
                      "    pm.globals.set('locationName', locationName);",
                      "    ",
                      "    console.log(`Getting air quality data for ${locationName} (AccuWeather key ${locationKey})`);",
                      "}",
                      "",
                      "// Send the request to get location data",
                      "pm.sendRequest(getLocationData, saveLocationData);"
                    ],
                    "_lastExecutionId": "45646ea6-d09e-43df-84af-d85b69e2f691"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "77d93ae4-dc83-4992-9535-467e48d2b238",
                    "type": "text/javascript",
                    "exec": [
                      "// Test the response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "pm.test('Response has forecast data', () => {",
                      "    pm.expect(pm.response.json()).to.have.property('DailyForecasts');",
                      "});",
                      "",
                      "try {",
                      "    // Check for a non-error response code",
                      "    if (pm.response.code >= 400) {",
                      "        console.log(`ERROR :: ${pm.response.code} response from API.`);",
                      "",
                      "        throw new Error('Error response from API.');",
                      "    }",
                      "",
                      "    // Extract the air quality data",
                      "    const responseData = pm.response.json();",
                      "    const airAndPollen = responseData.DailyForecasts[0].AirAndPollen;",
                      "    const airQuality = airAndPollen.find(value => value.Name === 'AirQuality');",
                      "    const aqValue = airQuality.Value;",
                      "    const aqCategory = airQuality.Category;",
                      "    const locationName = pm.globals.get('locationName');",
                      "    ",
                      "    // Build the Twitter status",
                      "    const twitterStatus =",
                      "        `The air quality index in ${locationName} is ${aqValue} (${aqCategory}).`;",
                      "    ",
                      "    // Log the Twitter status",
                      "    console.log(`Twitter status :: ${twitterStatus}`);",
                      "    ",
                      "    // Assign status to a Twitter global",
                      "    pm.globals.set('twitterStatus', twitterStatus);",
                      "}",
                      "catch (e) {",
                      "    // The data probably didn't match the expected values",
                      "    console.log(`ERROR :: ${e.message}`);",
                      "    console.log(pm.response.text());",
                      "",
                      "    throw e;",
                      "}",
                      ""
                    ],
                    "_lastExecutionId": "363730f0-7a48-40d0-a6df-c27ad320b9f2"
                  }
                }
              ]
            },
            {
              "id": "0f0e5642-af31-4f75-a581-09952d55683c",
              "name": "Post Air Quality Status to Twitter",
              "request": {
                "url": {
                  "protocol": "https",
                  "path": [
                    "1.1",
                    "statuses",
                    "update.json"
                  ],
                  "host": [
                    "api",
                    "twitter",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "{{twitterStatus}}"
                    }
                  ],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": []
                },
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "{{twitterConsumerKey}}",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterConsumerSecret}}",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessToken}}",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "{{twitterAccessTokenSecret}}",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "1.0",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "216285ef-2072-48cb-a756-553912582966",
                    "type": "text/javascript",
                    "exec": [
                      "",
                      ""
                    ],
                    "_lastExecutionId": "f57b97b6-700c-43bb-83e0-7c352cea68e0"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
                    "type": "text/javascript",
                    "exec": [
                      "// Check for OK response",
                      "pm.test('Status code is OK', () => {",
                      "    pm.response.to.be.ok;",
                      "});",
                      "",
                      "// Clear global state",
                      "pm.globals.clear('locationKey');",
                      "pm.globals.clear('locationName');",
                      "pm.globals.clear('twitterStatus');"
                    ],
                    "_lastExecutionId": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "bfba53f7-0239-4f63-803b-c84f3cf1668d",
            "name": "Air Quality",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "# Postman Air Quality Collection\n**Welcome to the Postman Air Quality Collection.**\nThis collection was created in response to the 2017 wildfires that devastated Northern California. The fires brought tragedy, and also caused hazardous ash and smoke pollution in the surrounding areas. As Postman has an office in San Francisco, we thought it was important to help our fellow Northern Californians and the rest of the world stay aware of the air quality in their surroundings.\n\nThis collection gets air quality updates from the AccuWeather API and posts them to Twitter according to your account and location specifications. \n\n\n## Technologies Used\n1. **Postman** - This collection utilizes [Postman Collections](https://www.getpostman.com/docs/postman/collections/creating_collections), [Postman Monitors](https://www.getpostman.com/docs/postman/monitors/intro_monitors), and [Postman Environments](https://www.getpostman.com/docs/postman/environments_and_globals/manage_environments).\n\n2. **AccuWeather API** - [AccuWeather’s API](https://developer.accuweather.com/home) allows users to obtain real weather data, including air quality data.\n\n  * **Using the AccuWeather API** - \n  To use AccuWeather’s API you will need to create an account and obtain a trial API key from their website. You can make up to 50 calls to the API per day on the trial, which should be enough to run this collection as an individual user.\n\n3. **Twitter** - We’ve chosen to use the [Twitter API](https://developer.twitter.com/en/docs/basics/getting-started)  as a platform to reach out to our community and spread the message about the state of the San Francisco air quality since the Northern California fires have started. You can configure your own Twitter account to post periodic air quality updates.\n\n  * **Using the Twitter API** - \n  To use Twitter’s API, you will need to create [a Twitter app](https://apps.twitter.com/) and get OAuth credentials.\n\n## Environment Variables\nYou need to set several environment variables before this collection will run:\n\n|Environment Variable Name |Description\n|--------------------------|--------------\n|`location`                |A string describing the location you would like to monitor\n|`accuweatherApiKey`       |An [AccuWeather API key](https://developer.accuweather.com/home)\n|`twitterConsumerKey`      |[A Twitter OAuth Consumer Key](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterConsumerSecret`   |[A Twitter OAuth Consumer Secret](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessToken`      |[A Twitter OAuth Access Token](https://developer.twitter.com/en/docs/basics/getting-started)\n|`twitterAccessSecret`     |[A Twitter OAuth Access Token Secret](https://developer.twitter.com/en/docs/basics/getting-started)",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ab6cb66e-4253-4df2-8d32-4dd3901c1889",
          "length": 2,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "068fd9da-3d5e-4ed3-b3b0-0f55f4c43203",
          "scriptId": "621b08c6-f988-43fc-92cc-dd02c20ad6ad",
          "execution": "3ef3d054-74c6-4dd8-a6e0-d24760921e0a"
        }
      }
    ],
    "error": null
  }
}